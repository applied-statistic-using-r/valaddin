% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R
\name{components}
\alias{components}
\alias{is_strict_closure}
\alias{strict_args}
\alias{strict_checks}
\alias{strict_core}
\title{Components of a strictly applied function}
\usage{
is_strict_closure(x)

strict_core(x)

strict_checks(x)

strict_args(x)
}
\arguments{
\item{x}{R object.}
}
\value{
If \code{x} is a strictly applied function: \code{strict_core()}
  returns a function; \code{strict_checks()} returns a data frame with
  columns \code{expr} (language), \code{string} (character), \code{msg}
  (character); \code{strict_args()} returns a character vector. However,
  these functions return \code{NULL} in the absence of the component to be
  extracted.
}
\description{
Helper functions are provided to extract the components of a strictly applied
function:
\itemize{
  \item \code{strict_core()}: extracts the underlying \dQuote{nonstrict}
    function
  \item \code{strict_checks()}: extracts the checks
  \item \code{strict_args()}: extracts the names of arguments whose presence
    is to be checked
}
\code{is_strict_closure()} is a predicate function that checks whether a
function is a strictly applied function with checks or missing-argument
warning, i.e., a function of class \code{"strict_closure"}.
}
\examples{
f <- function(x, y, ...) NULL
f_stc <- strictly(f, ~ is.numeric, list(~x, ~ y - x) ~ {. > 0})

identical(strict_core(f_stc), f)                    # TRUE
strict_checks(f_stc)                                # 4 x 3 data frame
strict_args(f_stc)                                  # NULL
strict_args(strictly(f_stc, .warn_missing = TRUE))  # "x" "y"
}

