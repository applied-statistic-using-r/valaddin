% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scope.R
\name{scope}
\alias{scope}
\alias{localize}
\alias{globalize}
\title{Make a reusable check formula}
\usage{
localize(chk)

globalize(chkr)
}
\arguments{
\item{chk}{Check formula of global scope with a custom error message, i.e., a
formula of the form \code{<string> ~ <predicate>}, cf.
\code{\link{strictly}()}.}

\item{chkr}{Function of class \code{"check_maker"}, i.e., created by
\code{localize()}.}
}
\value{
\code{localize()} returns a function of class \code{"check_maker"}
  with signature \code{function(...)}, which expects one-sided formulae as
  arguments.

\code{globalize()} returns the underlying global check formula.
}
\description{
\code{localize()} converts a check formula of global scope into a function
that \emph{generates} corresponding check formulae of local scope. This makes
it easy to specify reusable checks. \code{globalize()} takes such a
check-formula generator and returns the underlying check formula (of global
scope). \code{localize()} and \code{globalize()} are mutually invertible.
}
\examples{
\dontrun{

chk_pos_gbl <- "Not positive" ~ {. > 0}
chk_pos_lcl <- localize(chk_pos_gbl)
chk_pos_lcl(~x, ~x - y)
# list("Not positive: x" ~ x, "Not positive: x - y" ~ x - y) ~ {. > 0}

pass <- function(x, y) "Pass"

# Impose local positivity checks
f <- strictly(pass, chk_pos_lcl(~x, ~x - y))
f(2, 1)  # "Pass"
f(2, 2)  # Error: "Not positive: x - y"
f(0, 1)  # Errors: "Not positive: x", "Not positive: x - y"

# Or just check positivity of x
g <- strictly(pass, chk_pos_lcl(~x))
g(1, 0)  # "Pass"
g(0, 0)  # Error: "Not positive: x"

# In contrast, chk_pos_gbl checks positivity for all arguments
h <- strictly(pass, chk_pos_gbl)
h(2, 2)  # "Pass"
h(1, 0)  # Error: "Not positive: y"
h(0, 0)  # Errors: "Not positive: x", "Not positive: y"

# Alternatively, globalize the localized checker
h2 <- strictly(pass, globalize(chk_pos_lcl))
all.equal(h, h2)  # TRUE

# localize() and globalize() are mutual inverses
identical(globalize(localize(chk_pos_gbl)), chk_pos_gbl)  # TRUE
all.equal(localize(globalize(chk_pos_lcl)), chk_pos_lcl)  # TRUE
}

}
\seealso{
Documentation for \code{\link{strictly}()} explains the notion of
  \dQuote{scope} in the context of check formulae.
}
