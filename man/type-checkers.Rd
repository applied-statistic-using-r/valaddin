% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkers.R
\name{type-checkers}
\alias{type-checkers}
\title{Type checkers}
\arguments{
\item{\dots}{One-sided formulae that specify the expressions to check.}
}
\value{
Check formula of local scope.
}
\description{
These functions make check formulae of local scope based on the
correspondingly named \link[purrr:type-predicates]{type predicate} from the
\href{https://cran.r-project.org/package=purrr}{\pkg{purrr}}
package. For example, \code{vld_atomic} creates check formulae (of local
scope) for the \pkg{purrr} predicate function
\code{\link[purrr]{is_atomic}}.
}
\details{
Each function \code{vld_*} is a function of class
  \code{"check_maker"}, generated by \code{\link{localize}}.
}
\examples{
\dontrun{

f <- function(x, y) "Pass"

# Impose a check on x: ensure it's of type "logical"
f_firm <- firmly(f, vld_logical(~x))
f_firm(TRUE, 0)  # "Pass"
f_firm(1, 0)     # Error: "Not logical: x"

# To impose the same check on all arguments, apply globalize()
f_firmer <- firmly(f, globalize(vld_logical))
f_firmer(TRUE, FALSE)  # "Pass"
f_firmer(TRUE, 0)      # Error: "Not logical: y"
f_firmer(1, 0)         # Errors: "Not logical: x", "Not logical: y"
}
}
\alias{vld_atomic}
\alias{vld_character}
\alias{vld_double}
\alias{vld_function}
\alias{vld_integer}
\alias{vld_list}
\alias{vld_logical}
\alias{vld_null}
\alias{vld_numeric}
\alias{vld_vector}
\usage{
vld_atomic(...)

vld_character(...)

vld_double(...)

vld_function(...)

vld_integer(...)

vld_list(...)

vld_logical(...)

vld_null(...)

vld_numeric(...)

vld_vector(...)
}
\seealso{
Corresponding predicates: \link[purrr:type-predicates]{Type predicates} (\href{https://cran.r-project.org/package=purrr}{\pkg{purrr}})

\code{\link{globalize}} recovers the underlying check formula of global scope.

 The \emph{Details} section of \link{firmly} explains the notion of \dQuote{scope} in the context of check formulae.

Other checkers: \link{misc-checkers}, \link{bare-type-checkers}, \link{scalar-type-checkers}
}
