% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkers.R
\name{scalar-type-checkers}
\alias{scalar-type-checkers}
\title{Scalar type checkers}
\arguments{
\item{\dots}{One-sided formulae that specify the expressions to check.}
}
\value{
Check formula of local scope.
}
\description{
These functions make check formulae of local scope based on the
correspondingly named \link[purrr:scalar-type-predicates]{scalar type
predicate} from the \pkg{purrr} package. For example,
\code{vld_scalar_atomic} creates check formulae (of local scope) for the
\pkg{purrr} predicate function \code{\link[purrr]{is_scalar_atomic}}.
\cr\cr
The functions \code{vld_boolean}, \code{vld_number}, \code{vld_string},
\code{vld_singleton} are aliases for \code{vld_scalar_logical},
\code{vld_scalar_numeric}, \code{vld_scalar_character},
\code{vld_scalar_vector}, resp. (with appropriately modified error messages).
}
\details{
Each function \code{vld_*} is a function of class
  \code{"check_maker"}, generated by \code{\link{localize}}.
}
\examples{
\dontrun{

f <- function(x, y) "Pass"

# Impose a check on x: ensure it's boolean (i.e., a scalar logical vector)
f_strict <- strictly(f, vld_boolean(~ x))
f_strict(TRUE, 0)           # "Pass"
f_strict(c(TRUE, TRUE), 0)  # Error: "Not boolean: x"

# To impose the same check on all arguments, apply globalize
f_stricter <- strictly(f, globalize(vld_boolean))
f_stricter(TRUE, FALSE)    # "Pass"
f_stricter(TRUE, 0)        # Error: "Not boolean: y"
f_stricter(logical(0), 0)  # Errors: "Not boolean: x", "Not boolean: y"
}
}
\alias{vld_scalar_atomic}
\alias{vld_scalar_character}
\alias{vld_scalar_double}
\alias{vld_scalar_integer}
\alias{vld_scalar_list}
\alias{vld_scalar_logical}
\alias{vld_scalar_numeric}
\alias{vld_scalar_vector}
\alias{vld_boolean}
\alias{vld_number}
\alias{vld_string}
\alias{vld_singleton}
\usage{
vld_scalar_atomic(...)

vld_scalar_character(...)

vld_scalar_double(...)

vld_scalar_integer(...)

vld_scalar_list(...)

vld_scalar_logical(...)

vld_scalar_numeric(...)

vld_scalar_vector(...)

vld_boolean(...)

vld_number(...)

vld_string(...)

vld_singleton(...)
}
\seealso{
Corresponding predicates: \link[purrr:scalar-type-predicates]{Scalar type predicates} (\pkg{purrr})

\code{\link{globalize}} recovers the underlying check formula of global scope.

 The \emph{Details} section of \link{strictly} explains the notion of \dQuote{scope} in the context of check formulae.

Other checkers: \link{misc-checkers}, \link{bare-type-checkers}, \link{type-checkers}
}
