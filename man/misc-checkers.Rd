% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkers.R
\name{misc-checkers}
\alias{misc-checkers}
\title{Miscellaneous checkers}
\arguments{
\item{\dots}{One-sided formulae that specify the expressions to check.}
}
\value{
Check formula of local scope.
}
\description{
These functions make check formulae of local scope based on the
correspondingly named predicates \code{\link[purrr]{is_empty}()},
\code{\link[purrr]{is_formula}()} from the \pkg{purrr} package.
}
\details{
Each function \code{vld_*()} is a function of class
  \code{"check_maker"} generated by \code{\link{localize}()}.
}
\examples{
\dontrun{

f <- function(x, y) "Pass"

# Impose the condition that x is a formula
g <- strictly(f, vld_formula(~ x))
g(z ~ a + b, 0)  # "Pass"
g(0, 0)          # Error: "Not formula: x"

# Impose the condition that x and y are disjoint (assuming they are vectors)
h <- strictly(f, vld_empty(~ intersect(x, y)))
h(letters[1:3], letters[4:5])  # "Pass"
h(letters[1:3], letters[3:5])  # Error: "Not empty: intersect(x, y)"
}
}
\seealso{
\code{\link[purrr]{is_empty}}, \code{\link[purrr]{is_formula}}
  (\pkg{purrr}); \code{\link{globalize}()} (recover the underlying check
  formula of global scope)

  The documentation for \code{\link{strictly}()} explains the notion of
  \dQuote{scope} in the context of check formulae.

Other type checkers: \code{\link{bare-type-checkers}},
  \code{\link{scalar-type-checkers}},
  \code{\link{type-checkers}}
}
\alias{vld_empty}
\alias{vld_formula}
\usage{
vld_empty(...)

vld_formula(...)
}
